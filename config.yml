
#Mlyasnikov seedbox

#Secrets
# trakt.login
# trakt.pass
# lost.cookie
# nnm.dl
# pushbullet.api

# on new install copy secrets-pattern.yml to secrets.yml
# and change values
secrets: secrets.yml #paswords and account info
templates:
  global:   
    transmission:
      host: server.f6.lan
  
    make_rss: /var/www/flexget.rss

    set:
      path: "{{ secrets.local.downloaddir }}"

    # Require at least 10 seeds of any torrent
    torrent_alive:
      min_seeds: 10
      reject_for: 1 day
      
    regexp:
      reject:
        - (s|d)ub(s|bed)?\b: {from: title}                    # Block any subbed/dubbed/etc videos
        - \bspanish\b: {from: title}                          # Spanish releases kept cropping up
        - \b(duo|tri|quadri|tetra|penta)logy\b: {from: title} # Block series, only accept one at a time
        - \b3-?D\b: {from: title}                             # I don't have any 3D displays
        - \btrailer\b: {from: title}                          # I've gotten a few trailers that matched as movies. VERY annoying
        - \bR5\b: {from: title}                               # The following are poor quality types that somehow got through the quality
        - \bWEBSCR\b: {from: title}                           # features usually due to the title including a keyword like "720p" as well
        - \bscreener\b: {from: title}
        - \bTS\b: {from: title}
        - \bCam\b: {from: title}
        - '{C_P}': {from: title}                              # The following are groups with poor quality releases
        - TrTd TeaM: {from: title}
        - \[TNTVillage\]: {from: title}
        - \[facepalm\]: {from: title}
        - \bASAP\b: {from: title}
        - the.day.of.the.doctor                               # The following are titles that caused me issues from plugins
    
    # Filter by filenames. Allow multiple video types and rar packs (but note if there is just a
    # single .rar file it won't be accepted)
    content_filter:
      require:
        - '*.avi'
        - '*.mkv'
        - '*.mpg'
        - '*.mp4'
      reject:
        - 'password.txt'
        - '*.wmv'
   
    # The Pirate Bay ssl certs always fail
    verify_ssl_certificates: no
    # Size and seed restrictions require real torrents
    magnets: no
  
  #For item what i choose, disable all filters
  acceptall-global:
    disable:
      #- seen
      #- seen_info_hash
      #- retry_failed
      - configure_series
      - trakt_list
      - inputs
      - exists_series
      - regexp
      - content_size
      - torrent_alive
      - movie_queue
      - quality
      - content_size
      - content_filter
      
    accept_all: yes
  
  tv-global:
    set:
      path: "{{ secrets.local.downloaddir }}/series/"
          
    configure_series:
      from:
        trakt_list:
          username: '{{ secrets.trakt.login }}'
          password: '{{ secrets.trakt.pass }}'
          list: Follow
          type: shows
      settings:
        quality: <720p
        set:
          path: "{{ secrets.local.downloaddir }}/series/{{ tvdb_series_name|default(series_name) }}"

    thetvdb_lookup: yes
    
    pushbullet:
      apikey: '{{ secrets.pushbullet.apikey }}'
      title: "[Flexget] {{task}}"
      body: "{% if series_name is defined %}{{ tvdb_series_name|default(series_name) }} - {{ series_id }}{% if tvdb_ep_name|default(False) %} - {{ tvdb_ep_name }}{% endif %}\n{{ quality }}{% else %}{{ title }}{% endif %}"
      url: "{% if trakt_series_url is defined and trakt_season is defined and trakt_episode is defined %}{{ trakt_series_url }}/season/{{ trakt_season }}/episode/{{ trakt_episode }}{% endif %}"
    
  
  nnm-club-auth:
    headers:
      cookie: '{{ secrets.nnm.cookie }}'

  movies-global:
    quality: <=720p
    
    content_size:
      min: 12
      max: 2000
      strict: no

    movie_queue: accept
    
    set:
      path: "{{ secrets.local.downloaddir }}/movies"
    
    pushbullet:
      apikey: '{{ secrets.pushbullet.apikey }}'
      title: "[Flexget] {{task}}"
      body: "{% if imdb_name is define %}{{ imdb_name }} ({{ imdb_year }})\n{{ quality }}{% else %}{{ title }}{% end if %}"
      url: "{% if imdb_url %}{{ imdb_url }}{% endif %}"

  over-global:
    set:
      path: "{{ secrets.local.downloaddir }}"
      
    pushbullet:
      apikey: '{{ secrets.pushbullet.apikey }}'
      title: "[Flexget] {{task}}"
      body: "{{ title }}"
      


tasks:

  #Conetent:
  
  # series
  #   local 
  #   nnm-club.me dl list
  #   lostfilm.tv
  #
  # movies
  #   local
  #   nnm-club.me dl list
  #   nnm-club.me global list
  #   rutraker.org global list
  #
  # over
  #   local
  #   nnm-club.me dl list
  #
  # service tasks
  # scheldure
  
  
  #get torrent from local folder
  #not check for series ep num or so, just download torrent 
  local.series:
    priority: 10
    
    template:
      - tv-global
      - acceptall-global #no need for filtring items

    filesystem:
      path: "{{ secrets.lookup.series }}"
      regexp: '.*\.torrent$'
      #recursive: yes
    
    manipulate:
      - title:
          replace:
            regexp: '\.'
            format: ' '
            
    no_entries_ok: yes
    
    all_series:
      parse_only: yes
      set:
        path: "{{ secrets.local.downloaddir }}/series/{{ tvdb_series_name|default(series_name) }}"
    
    plugin_priority:
      exec: 0
    
    exec:
      on_output:
        for_accepted: rm "{{location}}"
    
    

  #from lostfilm.tv main series feed
  series.lostfilm.tv:
    priority: 10
    
    template:
      - tv-global

    disable:
      - torrent_alive
    
    headers:
      cookie: '{{ secrets.lost.cookie }}'
    rss: http://www.lostfilm.tv/rssdd.xml

    manipulate:
      - title:
          from: url
      - title:
          replace:
            regexp: 'https://www\.lostfilm\.tv/download\.php.+&((.*)((s|S)\d\d(e|E)\d\d)(.*))\.torrent'
            format: '\2 \3 \6'
      - title:
          replace:
            regexp: '\.'
            format: ' '
    
    urlrewrite:
      sitename:
        regexp: 'http://lostfilm.tv/download.php\?(?P<details>.*)'
        format: 'http://www.lostfilm.tv/download.php?\g<details>'
    
    
  
  #second series feed, emit only selected torrents, need just for grouping
  series.nnm-club.me.dl:
    priority: 11
    
    template:
      - tv-global
      - acceptall-global #not need filtring
      - nnm-club-auth
    
    rss: "http://nnm-club.me/forum/rss2.php?f=1219,768,769&r&dl={{ secrets.nnm.dl }}&h=24"
          
    no_entries_ok: yes
    
    
  # local movie feed
  local.movies:
    priority: 20
    
    template:
      - movies-global
      - acceptall-global

    filesystem:
      path: "{{ secrets.lookup.movies }}" #movie folder
      regexp: '.*\.torrent$'
      #recursive: yes

    no_entries_ok: yes
    
    manipulate:
      - title:
          replace:
            regexp: '\.'
            format: ' '

    plugin_priority:
      exec: 0

    exec:
      on_output:
        for_accepted: rm "{{location}}"
  
  #Movies accept without filter, just for groouping
  movies.nnm-club.me.dl:
    priority: 20
    
    template:
      - movies-global
      - acceptall-global
      - nnm-club-auth
    
    rss: "http://nnm-club.me/forum/rss2.php?f=216,318,220,224&r&dl={{ secrets.nnm.dl }}&h=24"
    
    no_entries_ok: yes
    
  #Movies from global feed filtred by movie_queue
  movies.nnm-club.me:
    priority: 21
    
    template:
      - movies-global
      - nnm-club-auth
    
    rss: "http://nnm-club.me/forum/rss2.php?f=216,318,220,224&r&h=24"
    
    manipulate:
      - title:
          extract: '.+?\s+/(.*)'
      
      
  local.over:
    priority: 30
    template:
      - over-global
      - acceptall-global

    filesystem:
      path: "{{ secrets.lookup.over }}" #over folder
      regexp: '.*\.torrent$'
      #recursive: yes

    no_entries_ok: yes

    plugin_priority:
      exec: 0

    exec:
      on_output:
        for_accepted: rm "{{location}}"

  over.nnm-club.me.dl:
    priority: 30
    
    template:
      - over-global
      - acceptall-global
      - nnm-club-auth
    
    rss: 'http://nnm-club.me/forum/rss2.php?dl={{ secrets.nnm.dl }}&h=24'
      
#Service tasks

  #service task for fillup moviequeue
  queue.movies:
    template: 
      - no_global
      
    trakt_list:
      username: '{{ secrets.trakt.login }}'
      password: '{{ secrets.trakt.pass }}'
      list: watchlist
      type: movies
      
    seen: local  
    movie_queue: add
    accept_all: true

schedules:
  - tasks: [queue.*]
    interval:
      hours: 2
  - tasks: [movies.*, series.*, over.*]
    interval:
      minutes: 20
  - tasks: [local.*]
    interval:
      minutes: 1

    
  
  


    
    
    

  
